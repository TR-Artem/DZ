using System;
using System.Collections.Generic;
using System.Linq;

public class Student
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Group { get; set; }
    public int[] Grades { get; set; }

    public Student(string firstName, string lastName, string group, int[] grades)
    {
        FirstName = firstName;
        LastName = lastName;
        Group = group;
        Grades = grades;
    }

    public double AverageGrade => Grades.Average();
}

class Program
{
    static void Main()
    {
        // 1. Заполнение списка студентов тестовыми данными
        List<Student> students = new List<Student>
        {
            new Student("Иван", "Иванов", "Группа 1", new int[] {5, 4, 5, 5, 4}),
            new Student("Петр", "Петров", "Группа 1", new int[] {3, 4, 3, 4, 3}),
            new Student("Анна", "Сидорова", "Группа 1", new int[] {5, 5, 5, 5, 5}),
            new Student("Мария", "Кузнецова", "Группа 2", new int[] {4, 4, 5, 4, 4}),
            new Student("Алексей", "Смирнов", "Группа 2", new int[] {3, 3, 2, 3, 4}),
            new Student("Елена", "Попова", "Группа 2", new int[] {5, 4, 4, 5, 4}),
            new Student("Дмитрий", "Васильев", "Группа 3", new int[] {4, 5, 4, 4, 5}),
            new Student("Ольга", "Новикова", "Группа 3", new int[] {3, 4, 3, 3, 3}),
            new Student("Сергей", "Федоров", "Группа 3", new int[] {5, 5, 4, 5, 5}),
            new Student("Татьяна", "Морозова", "Группа 4", new int[] {4, 4, 4, 4, 4}),
            new Student("Андрей", "Волков", "Группа 4", new int[] {2, 3, 2, 3, 2}),
            new Student("Наталья", "Алексеева", "Группа 4", new int[] {5, 4, 5, 5, 4}),
            new Student("Артем", "Лебедев", "Группа 5", new int[] {3, 4, 5, 4, 3}),
            new Student("Екатерина", "Семенова", "Группа 5", new int[] {5, 5, 4, 5, 5}),
            new Student("Виктор", "Павлов", "Группа 5", new int[] {4, 3, 4, 4, 3})
        };

        while (true)
        {
            Console.WriteLine("\nМеню анализа успеваемости студентов:");
            Console.WriteLine("1. Студенты со средним баллом > 4");
            Console.WriteLine("2. Сортировка студентов по фамилии и имени");
            Console.WriteLine("3. Студенты с хотя бы одной оценкой 5");
            Console.WriteLine("4. Средний балл по группам");
            Console.WriteLine("5. Лучшие студенты определенной группы");
            Console.WriteLine("0. Выход");

            Console.Write("Выберите действие: ");
            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    // Найти всех студентов, у которых средний балл выше 4
                    var highAchievers = students.Where(s => s.AverageGrade > 4);
                    Console.WriteLine("\nСтуденты со средним баллом > 4:");
                    foreach (var student in highAchievers)
                    {
                        Console.WriteLine($"{student.LastName} {student.FirstName} - {student.AverageGrade:F2}");
                    }
                    break;

                case "2":
                    // Отсортировать студентов по фамилии и имени
                    var sortedStudents = students.OrderBy(s => s.LastName).ThenBy(s => s.FirstName);
                    Console.WriteLine("\nСтуденты, отсортированные по фамилии и имени:");
                    foreach (var student in sortedStudents)
                    {
                        Console.WriteLine($"{student.LastName} {student.FirstName}");
                    }
                    break;

                case "3":
                    // Получить список имён студентов с хотя бы одной оценкой 5
                    var studentsWith5 = students.Where(s => s.Grades.Contains(5))
                                              .Select(s => $"{s.FirstName} {s.LastName}");
                    Console.WriteLine("\nСтуденты с хотя бы одной оценкой 5:");
                    foreach (var name in studentsWith5)
                    {
                        Console.WriteLine(name);
                    }
                    break;

                case "4":
                    // Сгруппировать студентов по группам и вычислить средний балл
                    var groupAverages = students.GroupBy(s => s.Group)
                                              .Select(g => new {
                                                  Group = g.Key,
                                                  AvgGrade = g.Average(s => s.AverageGrade)
                                              });
                    Console.WriteLine("\nСредний балл по группам:");
                    foreach (var group in groupAverages)
                    {
                        Console.WriteLine($"{group.Group}: {group.AvgGrade:F2}");
                    }
                    break;

                case "5":
                    // Найти студентов из определенной группы со средним баллом > 4, отсортировать по имени
                    Console.Write("\nВведите название группы: ");
                    string groupName = Console.ReadLine();

                    var groupTopStudents = students.Where(s => s.Group == groupName && s.AverageGrade > 4)
                                                 .OrderBy(s => s.FirstName)
                                                 .Select(s => s.LastName);
                    Console.WriteLine($"\nЛучшие студенты группы {groupName} (средний балл > 4):");
                    foreach (var lastName in groupTopStudents)
                    {
                        Console.WriteLine(lastName);
                    }
                    break;

                case "0":
                    return;

                default:
                    Console.WriteLine("Неверный выбор. Попробуйте снова.");
                    break;
            }
        }
    }
}
